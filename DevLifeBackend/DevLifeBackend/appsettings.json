{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning",
      "Microsoft.EntityFrameworkCore": "Warning" // EF Core-ის ლოგირებისთვის
    }
  },
  "AllowedHosts": "*", // ნებადართული ჰოსტები: Production-ში უნდა მიუთითოთ კონკრეტული დომენები

  "ConnectionStrings": {
    "DefaultConnection": "Server=(localdb)\\mssqllocaldb;Database=DevLifeDb;Trusted_Connection=True;MultipleActiveResultSets=true",
    "MongoDb": "mongodb://localhost:27017/DevLifeDb" // MongoDB-ს კავშირის სტრიქონი
  },

  "Jwt": {
    // ეს არის საიდუმლო გასაღები JWT-ის ხელმოსაწერად.
    // !!! უმნიშვნელოვანესია: Production-ში შეცვალეთ ეს ძალიან გრძელი (მინიმუმ 16-32 სიმბოლო),
    // შემთხვევითი და კრიპტოგრაფიულად ძლიერი სტრიქონით.
    // მაგალითად: "ThisIsASecretKeyForYourAPIThatIsMoreThanEnoughToSecureYourTokens!!!"
    // ან შეგიძლიათ გამოიყენოთ ონლაინ GUID გენერატორი და შემდეგ დაშიფროთ Base64-ში.
    // ეს მნიშვნელობა არ უნდა იყოს მარტივად მისახვედრი!
    "Key": "ეს არის დროებითი გასაღები, გთხოვთ შეცვალოთ production-ში!_2025",

    // Issuer - ვინ გასცემს JWT ტოკენს. ჩვეულებრივ, ეს თქვენი API-ის URL-ია.
    // მაგალითად: "https://yourdomain.com/api" ან "https://localhost:5001"
    "Issuer": "http://localhost:5000", // დროებითი მნიშვნელობა, შეცვალეთ რეალური URL-ით

    // Audience - ვისთვის არის განკუთვნილი JWT ტოკენი.
    // მაგალითად: თქვენი ვებ-აპლიკაციის URL ან "DevLifeUsers"
    "Audience": "DevLifeWebApp" // დროებითი მნიშვნელობა, შეცვალეთ რეალური აუდიტორიით
  }
}